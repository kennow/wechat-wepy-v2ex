<style lang="scss">
  .topic {
    &__gap {
      padding: 0 0 16px 16px;
      color: #4a4a4a;
      font-size: 14px;
    }
  }
</style>

<template>
  <view class="topic">
    <block wx:if="{{ fetchDone }}">
      <Panel :panelData.sync="topicData" isTopic="true"
             @tapAvatar.user="tapAvatar" />

      <view class="topic__gap">评论</view>

      <repeat for="{{ commentsData }}" key="index">
        <Comment :commentData.sync="item"
                 @tapAvatar.user="tapAvatar" />
      </repeat>

      <Bottom />
    </block>

    <Failure wx:if="{{ !fetchDone }}" />
  </view>
</template>

<script>
  import wepy from 'wepy'

  import { panelDataReset, commentDataReset, showRefresh } from '../utils'

  import Panel from '../components/panel'
  import Comment from '../components/comment'
  import Bottom from '../components/bottom'
  import Failure from '../components/failure'

  export default class extends wepy.page {
    config = {
      navigationBarTitleText: '主题'
    }
    components = {
      Panel,
      Comment,
      Bottom,
      Failure
    }
    data = {
      fetchDone: false,
      topicData: {},
      commentsData: []
    }
    methods = {
      tapAvatar: ({ username }) => {
        this.$navigate('/pages/member', { username })
      }
    }
    onLoad({ id }) {
      this.id = id
      this.getTopicData(id)
    }
    async getTopicData(id) {
      try {
        const [{ data: topicData }, { data: commentsData }] = await Promise.all([
          wepy.request({
            url: 'topics/show.json',
            data: { id }
          }),
          wepy.request({
            url: 'replies/show.json',
            data: { topic_id: id }
          })
        ])
        this.topicData = panelDataReset(topicData[0])
        this.commentsData = commentsData.map(item => commentDataReset(item))
        this.fetchDone = true
        this.$apply()
      } catch (err) {}
    }
    onPullDownRefresh() {
      showRefresh.call(this)
      this.getTopicData(this.id)
    }
  }
</script>
